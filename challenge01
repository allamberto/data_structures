// Challenge 01: Rotating Arrays
// Ana Luisa Lamberto

#include <iostream>
#include <vector>
#include <string>
using namespace std;

void shiftLeft(vector<int>&);
void shiftRight(vector<int>&, int n);
void print(vector<int>&, int n);

int main(){

  int count, rotate;
  char direction;

while(cin >> count >> rotate >> direction){
  int num;
  vector<int> array;

  for(int i = 0; i < count; i++){ //for every number in vector
    cin >> num; //take in input
    array.push_back(num); //add to array
  }

  switch(direction){ //shift to correct direction
    case 'R':
    case 'r':
      for(int i = 0; i < rotate; i++) //for set number of rotations
        shiftRight(array, count); //switch Right
      break;
    case 'L':
    case 'l':
      for(int i = 0; i < rotate; i++) //for set number of rotations
        shiftLeft(array); //switch Left
      break;
    default:
      cout << "Invalid Direction" << endl; //if not an L or R input
  }

  print(array, count);
}
  return 0;
}

void shiftLeft(vector<int>& array){
  int temp = array[0];
  array.erase(array.begin()); //erase first number
  array.push_back(temp); //add it to the end of array
}

void shiftRight(vector<int>& array, int n){
  int temp = array[n - 1];
  array.pop_back(); //erase last number
  array.insert(array.begin(), temp); //add it to the beginning of array
}

void print(vector<int>& array, int n){
  for(int i = 0; i < n; i++){
    if(i < n - 1)
      cout << array[i] << " ";
    else
      cout << array[i] << endl;
  }
}

